{
  "version": 4,
  "terraform_version": "0.12.24",
  "serial": 10,
  "lineage": "332c2b59-af76-0f50-baf4-207defdedc21",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_iam_access_key",
      "name": "DemoUser",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "encrypted_secret": null,
            "id": "AKIAZ5RFUOS2FT6IIB3X",
            "key_fingerprint": null,
            "pgp_key": null,
            "secret": "qxKdTB7R7AXriH+ybIqeYLseDZzkKncUsuvQrF1d",
            "ses_smtp_password": "Am5oCaNLFTTD5GSfAKiDMW3NAInCeKSkwuCq3rOjP9fE",
            "ses_smtp_password_v4": "BIHGn9JwMtdxa2nFGUbEJ3cN6CdSBvMQhX+IrVPXqa/a",
            "status": "Active",
            "user": "Sonal"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.DemoUser"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user",
      "name": "DemoUser",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::681904993460:user/Sonal",
            "force_destroy": false,
            "id": "Sonal",
            "name": "Sonal",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AIDAZ5RFUOS2M7DMSDW5H"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user_policy",
      "name": "User_Policy1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "Sonal:S3ReadOnlyAccess",
            "name": "S3ReadOnlyAccess",
            "name_prefix": null,
            "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"s3:Get*\",\r\n                \"s3:List*\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}",
            "user": "Sonal"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.DemoUser"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user_policy",
      "name": "User_Policy2",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "Sonal:CloudWatchReadOnlyAccess",
            "name": "CloudWatchReadOnlyAccess",
            "name_prefix": null,
            "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"autoscaling:Describe*\",\r\n                \"cloudwatch:Describe*\",\r\n                \"cloudwatch:Get*\",\r\n                \"cloudwatch:List*\",\r\n                \"logs:Get*\",\r\n                \"logs:List*\",\r\n                \"logs:Describe*\",\r\n                \"logs:TestMetricFilter\",\r\n                \"logs:FilterLogEvents\",\r\n                \"sns:Get*\",\r\n                \"sns:List*\"\r\n            ],\r\n            \"Effect\": \"Allow\",\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}",
            "user": "Sonal"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.DemoUser"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user_policy",
      "name": "User_Policy3",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "Sonal:SFullLambdaAccess",
            "name": "SFullLambdaAccess",
            "name_prefix": null,
            "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"cloudformation:DescribeChangeSet\",\r\n                \"cloudformation:DescribeStackResources\",\r\n                \"cloudformation:DescribeStacks\",\r\n                \"cloudformation:GetTemplate\",\r\n                \"cloudformation:ListStackResources\",\r\n                \"cloudwatch:*\",\r\n                \"cognito-identity:ListIdentityPools\",\r\n                \"cognito-sync:GetCognitoEvents\",\r\n                \"cognito-sync:SetCognitoEvents\",\r\n                \"dynamodb:*\",\r\n                \"ec2:DescribeSecurityGroups\",\r\n                \"ec2:DescribeSubnets\",\r\n                \"ec2:DescribeVpcs\",\r\n                \"events:*\",\r\n                \"iam:GetPolicy\",\r\n                \"iam:GetPolicyVersion\",\r\n                \"iam:GetRole\",\r\n                \"iam:GetRolePolicy\",\r\n                \"iam:ListAttachedRolePolicies\",\r\n                \"iam:ListRolePolicies\",\r\n                \"iam:ListRoles\",\r\n                \"iam:PassRole\",\r\n                \"iot:AttachPrincipalPolicy\",\r\n                \"iot:AttachThingPrincipal\",\r\n                \"iot:CreateKeysAndCertificate\",\r\n                \"iot:CreatePolicy\",\r\n                \"iot:CreateThing\",\r\n                \"iot:CreateTopicRule\",\r\n                \"iot:DescribeEndpoint\",\r\n                \"iot:GetTopicRule\",\r\n                \"iot:ListPolicies\",\r\n                \"iot:ListThings\",\r\n                \"iot:ListTopicRules\",\r\n                \"iot:ReplaceTopicRule\",\r\n                \"kinesis:DescribeStream\",\r\n                \"kinesis:ListStreams\",\r\n                \"kinesis:PutRecord\",\r\n                \"kms:ListAliases\",\r\n                \"lambda:*\",\r\n                \"logs:*\",\r\n                \"sns:ListSubscriptions\",\r\n                \"sns:ListSubscriptionsByTopic\",\r\n                \"sns:ListTopics\",\r\n                \"sns:Publish\",\r\n                \"sns:Subscribe\",\r\n                \"sns:Unsubscribe\",\r\n                \"sqs:ListQueues\",\r\n                \"sqs:SendMessage\",\r\n                \"tag:GetResources\",\r\n                \"xray:PutTelemetryRecords\",\r\n                \"xray:PutTraceSegments\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}",
            "user": "Sonal"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.DemoUser"
          ]
        }
      ]
    }
  ]
}
